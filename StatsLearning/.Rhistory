2+2
read.csv('Advertising.csv')
setwd('/Users/Ismael/Downloads')
setwd('/Users/Ismael Martinez/Downloads')
getwd()
head(adsdata)
library(tidyverse)
packages.install(tdyverse)
packages.install('tdyverse')
install.packages("tidyverse")
library(tidyverse)
library(reshape2)
setwd('/Users/Ismael Martinez/Downloads')
adsdata <- read.csv('Advertising.csv')
head(adsdata)
tail(adsdata)
str(adsdata)
ncol(adsdata)
nrow(adsdata)
ggplot(data=adsdata) +
geom_points(mapping = aes(x-adsdata:TV, y-adsdata:Sales))
ggplot(data=adsdata) +
geom_point(mapping = aes(x-adsdata:TV, y-adsdata:Sales))
ggplot(data=adsdata) +
geom_point(mapping = aes(x-adsdata:TV, y-adsdata:Sales))
ggplot(data=adsdata) +
geom_point(mapping = aes(x=adsdata:TV, y=adsdata:Sales))
ggplot(data=adsdata) +
geom_point(mapping = aes(x=adsdata:TV, y=adsdata:Sales))
?elem
?lm
?`mlm-class`
install.packages("mlm")
?MASS
?Boston
library(MASS)
library(MASS)
data <- Boston
?Boston
attach(data)
?lm
?Boston
head(data)
lm(~medv~lstat)
plot(medv,lstat)
abline(lm.data)
lm(medv~lstat)
lm(medv~lstat~lstat^2)
lm(medv~lstat^2)
lm(lm(medv~lstat)~lstat^2)
?residuals
lm.bos1 <- lm(medv~lstat)
lm.bos2 <- lm(medv~lstat) + I(lstat^2)
lm.bos2 <- lm(medv~lstat + I(lstat^2))
plot(predict (lm.bos2), resuals(lm.bos2))
plot(predict (lm.bos2), residuals(lm.bos2))
lm.bos3 <- lm(medv~poly(lstat,2))
lm.bos3 <- lm(medv~poly(lstat,3))
plot(predict (lm.bos3), residuals(lm.bos3))
lm.bos100 <- lm(medv~poly(lstat,100))
lm.bos50 <- lm(medv~poly(lstat,50))
lm.bos20 <- lm(medv~poly(lstat,20))
plot(predict (lm.bos20), residuals(lm.bos20))
install.packages("swirl")
library(swirl)
swirl()
5+7
X <- 5+7
X <- 5 + 7
x <- 5+7
x
y <- x-3
y
z <- c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2 + 100
my_sqrt <- sqrt(z-1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
setwd("..")
dir.create("testdir")
dir()
setwd("..")
setwd("testdir")
dir.create("testdir")
setwd("testdir")
file.create("mytest.R")
ls()
dir()
file.exists("mytest.R")
file.info("mytest.R")
args(file.rename)
file.rename("mytest.R","mytest2.R")
file.copy("mytest2.R","mytest3.R")
file.path("mytest3.R")
file.path("folder1","folder2")
dir()
?dir.create
dir.create(file.path("testdir2","testdir3"))
dir.create(file.path("testdir2","testdir3"),recursice=TRUE)
dir.create(file.path("testdir2","testdir3"),recursive=TRUE)
setwd(old.dir)
swirl()
swirl()
1:20
pi:10
5:1
15:1
:?
?
':'
seq(1,20)
seq(0,10, by=0.5)
seq(5,10,length=30)
my_seq <- seq(5,10,length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0,times = 40)
rep(c(1,2,3), times = 10)
rep(c(0,1,2), times = 10)
rep(c(0,1,2), each = 10)
num_vext <- c(0.5, 55, -10, 6)
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My","name","is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Ismael")
my_name
paste(my_name, collapse=" ")
paste("Hello","world!",sep = " ")
paste(1:3, c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4. sep = "-")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA,1000)
my_data <- sample(c(y,z),100)
my_na <- is.na(my_data
)
my_na
my_data == NA
sum(my_na)
my_data
0\0
0/0
Inf/Inf
Inf - Inf
x
x[1:10]
x[is.na(x)]
y<- x[!is.na(x)]
y
y[y> 0]
x[x>0]
x[!is.na(x) & x>0]
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2,-10)]
x[-c(2,10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11,2,NA)
names(vect2) <- c("foo","bar","norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo","bar")]
exit()
swirl()
0
swirl()
7
restart()
bye()
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(data=1:20, nrow = 4, ncol = 5)
identical(my_matrix,my_matrix2)
patients <- c("Bill","Gina","Kelly","Sean")
cbind(my_matrix, patients)
cbind(patients,my_matrix)
my_data <- data.frame(patients,my_matrix)
my_data
class(my_data)
col <- c("patient","age","weight","bp","rating","test")
c("patient","age","weight","bp","rating","test")
cnames <- c("patient","age","weight","bp","rating","test")
colnames(my_data) <- cnames()
colnames(my_data) <- cnames
my_data
bye()
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 ==7
6 < 7
1 <= 10
10 <= 10
5 != 7
!(5 == 7)
FALSE & FALSE
TRUE & c(TRUE,FALSE,FALSE)
TRUE && c(TRUE, FALSE,FALSE)
TRUE | c(TRUE,FALSE,FALSE)
TRUE || c(TRUE,FALSE,FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins','twins')
xor(5==6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints <= 0)
any(ints < 0)
all(ints > 0)
bye()
swirl()
Sys.Data()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(c(1.4,3.6,7.9,8.8))
evaluate(sd, c(1.4,3.6,7.9,8.8))
evaluate(function(x){x+1}, 6)
evaluate(function{x[1]},c(8,4,0))
evaluate(function(x){x[1]},c(8,4,0))
evaluate(function(x){x[-1]},c(8,4,0))
evaluate(function(x){x[length(x)]},c(8,4,0))
?paste
paste("Programming","is","fun!")
submit()
submit()
telegram("Hello","my","friend!")
submit()
submit()
submit()
submit()
mad_libs(place="Vancouver",adjective="run",noun="bottle")
submit()
'I' %p% 'love' %p% 'R!'
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
sapply(flags, class)
cls_vector <- sapply(flags, class)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flags_colors <- flags[,11:17]
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
sapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(3,4,5,5,5,6,6)
unique(c(3,4,5,5,5,6,6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
library(tidyverse)
library(reshape2)
getwd()
setwd("C:/Users/Ismael Martinez/Destop")
setwd("C:/Users/Ismael Martinez/Desktop/AQM")
getwd()
library(tidyverse)
library(reshape2)
#print out working directory
getwd()
setwd("C:/Users/Ismael Martinez/Desktop/AQM/StatsLearning")
dir.create("StatsLearning")
setwd("C:/Users/Ismael Martinez/Desktop/AQM/StatsLearning")
adsdata <- read.csv("Advertising.csv")
head(adsdata)
tail(adsdata)
str(adsdata)
?str
nrow(adsdata)
ncol(adsdata)
?ggplot
ggplot(data=adsdata)
ggplot(data=adsdata)
?geom_point
?aes
ggplot(data=adsdata) +
geom_point(mapping = aes(x=adsdata$Radio, y=adsdata$Sales))
ggplot(data=adsdata) +
geom_point(mapping = aes(x=adsdata$Radio, y=adsdata$Sales))
ggplot(data=adsdata) +
geom_point(mapping = aes(x=adsdata$Radio, y=adsdata$Sales))
ggplot(data=adsdata) +
geom_point(mapping = aes(x=adsdata$Newapaper, y=adsdata$Sales))
ggplot(data=adsdata) +
geom_point(mapping = aes(x=adsdata$Newapaper, y=adsdata$Sales))
nrow(adsdata)
str(adsdata)
ggplot(data=adsdata) +
geom_point(mapping = aes(x=adsdata$Newspaper, y=adsdata$Sales))
ggplot(data=adsdata) +
geom_point(mapping = aes(x=adsdata$TV, y = adsdata$Sales))
adsdata$X
radio <- adsdata$Radio
addf <- data.frame(radio,tv,print,sales,count)
tv <- adsdata$TV
print <- adsdata$Newspaper
sales <- adsdata$Sales
count <- adsdata$X #X is the index of the row
addf <- data.frame(radio,tv,print,sales,count)
adsdata_df <- data.frame(radio,tv,print,sales,count)
?melt
adsdata_df.m <- melt(data=adsdata_df,id.vars="sales", measure.vars=c("radio","tv","print"))
str(adsdata_df)
str(adsdata_df.m)
xval <- adsdata_df.m$value
yval <- adsdata_df.m$sales
factors <- adsdata_df.m$variable
?theme_bw
ggplot(data=adsdata_df.m) +
geom_point(x=xval,y=yval) +
theme_bw() #theme of non-data display
ggplot(data=adsdata_df.m) +
geom_point(mapping=aes(x=xval,y=yval, color=factor)) +
theme_bw() #theme of non-data display
ggplot(data=adsdata_df.m) +
geom_point(mapping=aes(x=xval,y=yval, color=factors)) +
theme_bw() #theme of non-data display
?mpg
mpg
str(mpg)
ggplot(data=mpg) +
geom_point(mapping=aes(x=displ,y=hwy))
ncol(mpg)
nrow(mpg)
ggplot(data=mpg) +
geom_point(mapping=aes(x=displ,y=hwy,color=class))
ggplot(data=mpg) +
geom_point(mapping=aes(x=displ,y=hwy,alpha=class))
ggplot(data=mpg) +
geom_point(mapping=aes(x=displ,y=hwy,shape=class))
ggplot(data=mpg) +
geom_point(mapping=aes(x=displ,y=hwy,shape=class))
?lm
str(adsdata_df.m)
lm(sales ~ value,data=adsdata_df.m)
lmSalesRadio <- lm(adsdata$Radio~adsdata$Sales,data=adsdata)
confit(lmSalesRadio)
confit(lmSalesRadio)
?confit
?confint
confint(lmSalesRadio)
lmSalesRadio <- lm(adsdata$Sales~adsdata$Radio,data=adsdata)
confint(lmSalesRadio)
summary(lmSalesRadio)
summary(lmSalesRadio)
plot(adsdata$TV)
abline(lmSalesRadio)
lmSalesRadio <- lm(adsdata$Sales ~ adsdata$Radio, data = adsdata)
ggplot(data=adsdata) +
geom_point(mapping=aes(x=adsdata$TV,y=adsdata$Sales))
lmTV <- lm(adsdata$Sales ~ adsdata$TV, data=adsdata)
lmTV
ggplot(data=adsdata) +
geom_point(mapping=aes(x=adsdata$TV,y=adsdata$Sales)) +
absline(lmTV)
ggplot(data=adsdata) +
geom_point(mapping=aes(x=adsdata$TV,y=adsdata$Sales)) +
abline(lmTV)
abline(lmTV)
lmTV
lmTV
abline(lmTV)
lmTV <- lm(adsdata$Sales ~ adsdata$TV, data=adsdata)
lmTV
ggplot(data=adsdata) +
geom_point(mapping=aes(x=adsdata$TV,y=adsdata$Sales)) +
abline(lmTV)
lmTV <- lm(adsdata$Sales ~ adsdata$TV, data=adsdata)
lmTV
lmTV <- lm(adsdata$TV ~ adsdata$Sales, data=adsdata)
lmTV
abline(lmTV)
lmTV <- lm(adsdata$Sales ~ adsdata$TV, data=adsdata)
plot(adsdata$Sales~adsdata$TV)
?abline
abline(lmTV) #plots the linear model
lmTV
ggplot(data=adsdata) +
geom_point(mapping=aes(x=adsdata$TV,y=adsdata$Sales)) +
abline(lmTV)
abline(lmTV) #plots the linear model
abline(lmTV) #plots the linear model
dev.off()
abline(lmTV) #plots the linear model
lmTV <- lm(adsdata$Sales ~ adsdata$TV, data=adsdata)
abline(lmTV) #plots the linear model
ggplot(data=adsdata) +
geom_point(mapping=aes(x=adsdata$TV,y=adsdata$Sales)) +
abline(lmTV)
window()
